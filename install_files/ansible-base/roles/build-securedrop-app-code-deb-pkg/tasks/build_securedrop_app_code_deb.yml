---
- name: Install dependencies for building securedrop-app-code deb package.
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items: development_dependencies
  tags:
    - apt

- name: Install pip wheel.
  pip:
    name: wheel
  tags:
    - pip

# Important to remove the build directory before starting to collect files.
# Better than removing at the end of the task list, since it affords debugging
# and guarantees a clean slate for subsequent builds.
- name: Remove the build path.
  file:
    state: absent
    dest: /tmp/{{ securedrop_app_code_deb }}
  tags:
    - build
    - cleanup

# The trailing slashes are important here (classic rsync).
# Ansible treats the default base directory for the `synchronize` module
# as the role's "files" directory, when running tasks within a role.
# Since we want all the files included in the role, copy them recursively.
# This may prevent the role from being extensible via meta/main.yml.
- name: Copy package static files.
  synchronize:
    mode: push
    dest: /tmp/{{ securedrop_app_code_deb }}/
    src: "{{ role_path }}/files/"
    rsync_path: "sudo rsync"

- name: Remove the build path.
  file:
    state: absent
    dest: /tmp/{{ securedrop_app_code_deb }}
  tags:
    - build
    - cleanup

- name: Create build path directories.
  file:
    state: directory
    dest: /tmp/{{ securedrop_app_code_deb }}/{{ item }}
  with_items:
    - var
    - var/www
    - var/securedrop
    - etc
    - etc/apparmor.d
  tags:
    - build

- name: Remove config.py from build path.
  file:
    state: absent
    dest: /tmp/{{ securedrop_app_code_deb }}/var/www/securedrop/config.py
  tags:
    - build
    - cleanup

- name: Copy SecureDrop application code.
  synchronize:
    mode: push
    src: "{{ securedrop_app_code_directory }}"
    dest: /tmp/{{ securedrop_app_code_deb }}/var/www/

- name: Create pip wheel archive for Debian package requirements.
  command: >
    pip wheel -r /tmp/{{ securedrop_app_code_deb }}/var/www/securedrop/requirements/securedrop-requirements.txt
    -w /tmp/{{ securedrop_app_code_deb }}/var/securedrop/wheelhouse
  tags:
    - pip
    - build

- name: Copy AppArmor profiles to build path.
  copy:
    src: "{{ item }}"
    dest: /tmp/{{ securedrop_app_code_deb }}/etc/apparmor.d/{{ item }}
  with_items: apparmor_profiles
  tags:
    - build
    - apparmor

- name: Build securedrop-app-code Debian package.
  command: dpkg-deb --build /tmp/{{ securedrop_app_code_deb }}
  args:
    creates: /tmp/{{ securedrop_app_code_deb }}.deb
  tags:
    - build

- name: Fetch the securedrop-app-code deb package back to localhost.
  fetch:
    flat: yes
    src: /tmp/{{ securedrop_app_code_deb }}.deb
    dest: ../../build/
    fail_on_missing: yes
  tags:
    - build

- name: Remove newly built Debian package from build machine.
  file:
    state: absent
    dest: /tmp/{{ securedrop_app_code_deb }}.deb
  tags:
    - build
    - cleanup
