---
# Ensure that the build machine is present. If it hasn't been created,
# then Vagrant will not add it to the generated inventory file. Since
# the build machine is required for staging runs, error out with a helpful
# message, pointing the developer to the docs.
- name: Ensure Build VM is available.
  hosts: localhost
  connection: local
  gather_facts: no
  sudo: no
  tasks:
    - name: Check for "build" machine in inventory.
      fail:
        msg: >
          The "build" VM is not reachable, but is required for building the
          app code Debian packages on the staging machines. Run `vagrant up build`,
          then `vagrant provision /staging/`. Thereafter you can run
          `ANSIBLE_ARGS="--tags rebuild" vagrant provision /staging/` to rebuild
          and reinstall the application code.
      when: "'build' not in groups.all"
  tags: rebuild

# All plays in this playbook target the build host, but most be invoked separately,
# since we're using wrapper roles for the build. If you add multiple child roles with
# the same parent in the same play, Ansible conflates the dependencies, and only the
# last wrapper role will run. This is a known bug and will be fixed in v2.0.
- name: Build SecureDrop application Debian package from local repository.
  hosts: build
  vars_files:
    # The order of these files files is important, since each successive
    # include overrides vars in the previous files. Ordinarily we'd
    # use group memberships to manage the variable resolution order, but
    # since we're using Vagrant with Ansible, group management becomes tricky.
    - group_vars/securedrop.yml
    - group_vars/securedrop_application_server.yml
    - group_vars/development.yml
  roles:
    - role: build-debian-package
      build_debian_package_name: securedrop-app-code
      build_debian_package_version: "{{ securedrop_app_code_version }}"
      build_debian_package_files_directories:
        - src: "{{ securedrop_app_code_files }}/"
          dest: ""
        - src: "{{ securedrop_app_code_directory }}"
          dest: var/www/
      build_debian_package_version: "{{ securedrop_app_code_version }}"
      build_debian_package_pip_requirements: var/www/securedrop/requirements/securedrop-requirements.txt
      build_debian_package_pip_wheel_directory: var/securedrop/wheelhouse
      build_debian_package_description: >
        Packages the SecureDrop application code pip dependencies
        and apparmor profiles. This package will put the apparmor
        profiles in enforce mode. This package does use pip to install the pip wheelhouse
      tags: app-deb
  sudo: yes
  tags: rebuild

- name: Build OSSEC metapackages for server and agent.
  hosts: build
  vars_files:
  # The order of these files files is important, since each successive
  # include overrides vars in the previous files. Ordinarily we'd
  # use group memberships to manage the variable resolution order, but
  # since we're using Vagrant with Ansible, group management becomes tricky.
    - group_vars/securedrop.yml
    - group_vars/securedrop_application_server.yml
    - group_vars/development.yml
  # Providing custom vars at the playbook level to override the role defaults.
  vars:
    ossec_agent_files: ../securedrop-ossec-agent
    ossec_server_files: ../securedrop-ossec-server
  roles:
    - role: build-debian-package
      build_debian_package_name: securedrop-ossec-server
      build_debian_package_version: "{{ ossec_version }}+{{ securedrop_app_code_version }}"
      build_package_files_directory: "{{ ossec_server_files }}"
      build_debian_package_files_directories:
        - src: "{{ ossec_server_files }}"
          dest: ""
      tags:
        - ossec
        - securedrop-ossec-server

    - role: build-debian-package
      build_debian_package_name: securedrop-ossec-agent
      build_debian_package_version: "{{ ossec_version }}+{{ securedrop_app_code_version }}"
      build_debian_package_files_directories:
        - src: "{{ ossec_agent_files }}"
          dest: ""
      tags:
        - ossec
        - securedrop-ossec-agent

  sudo: yes
  tags: rebuild
